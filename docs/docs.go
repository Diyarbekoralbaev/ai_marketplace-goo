// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ai_models": {
            "get": {
                "description": "Get all AI models",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ai_models"
                ],
                "summary": "Get all AI models",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SwaggerAiModel"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create AI model",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ai_models"
                ],
                "summary": "Create AI model",
                "parameters": [
                    {
                        "description": "AI model object",
                        "name": "aiModel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SwaggerAiModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.SwaggerAiModel"
                        }
                    }
                }
            }
        },
        "/ai_models/use": {
            "post": {
                "description": "Use AI model",
                "produces": [
                    "multipart/form-data"
                ],
                "tags": [
                    "use_model"
                ],
                "summary": "Use AI model",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Text to analyze",
                        "name": "text",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image to analyze",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Content generated successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ai_models/{id}": {
            "get": {
                "description": "Get AI model",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ai_models"
                ],
                "summary": "Get AI model",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "AI model ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SwaggerAiModel"
                        }
                    }
                }
            },
            "put": {
                "description": "Update AI model",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ai_models"
                ],
                "summary": "Update AI model",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "AI model ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AI model object",
                        "name": "aiModel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SwaggerAiModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SwaggerAiModel"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete AI model",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ai_models"
                ],
                "summary": "Delete AI model",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "AI model ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "AI model deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/contact": {
            "get": {
                "description": "Get all messages",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contact"
                ],
                "summary": "Get all messages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SwaggerContact"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Contact",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contact"
                ],
                "summary": "Contact",
                "parameters": [
                    {
                        "description": "Contact object",
                        "name": "contact",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SwaggerContact"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.SwaggerContact"
                        }
                    }
                }
            }
        },
        "/contact/{id}": {
            "get": {
                "description": "Get message",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contact"
                ],
                "summary": "Get message",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Message ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SwaggerContact"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.LoginUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Register a new user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.SwaggerUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.LoginUser": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.SwaggerAiModel": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.SwaggerContact": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                }
            }
        },
        "models.SwaggerUser": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "marketplace.araltech.tech",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Go Gin Auth API",
	Description:      "This is a sample server Go Gin Auth server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
